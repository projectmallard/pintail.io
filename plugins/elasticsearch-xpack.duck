= Install Elasticsearch with X-Pack
@link[guide >elasticsearch]
@desc Install and Configure Elasticsearch with X-Pack.

This page outlines the steps for installing Elasticsearch with the X-Pack plugins.
X-Pack provides a number of features, including role-based security.
This page also provides instructions for installing Kibana, a web-based user interface for Elasticsearch.
Kibana is not strictly necessary, but it makes it easier to add users and roles.
If you choose not to use Kibana, refer to the
$link[>>https://www.elastic.co/guide/en/x-pack/current/xpack-security.html](X-Pack documentation)
for instructions on adding users and roles.

The Pintail Elasticsearch plugin works by communicating directly with an Elasticsearch server.
The build process sends data to be indexed to the server.
The search page queries the server using JSON queries sent over HTTP.
It is important that only trusted individuals are able to send data to be indexed,
but querying the index must be available to everybody.

Elasticsearch does not have built-in security.
To allow access to Elasticsearch outside a trusted network,
you need to use either a plugin like X-Pack or a proxy that only allows certain requests through.
This page discusses X-Pack.
Unfortunately, X-Pack is not open source, and it requires a licensing fee.
We are also exploring other Elasticsearch security mechanisms.
If you want to help, $link[>>http://projectmallard.org/about/contact](let us know).

These instructions were tested against Elasticsearch 6.1.1 on Fedora 26 and CentOS 7.
The specific installation instructions on this page will need to be adjusted for systems not using RPM,
but the configurations and basic ideas will remain the same.

== Install Elasticsearch

Use the following steps to install and configure Elasticsearch on your server.
Elasticsearch can scale to have multiple nodes in a cluster.
This page only deals with creating a single-node cluster, which is sufficient for most sites.
The instructions throughout this page assume you are creating a public-facing production server.
Sometimes, it is useful to create a local server for testing purposes.
These instructions note differences for local testing whenever possible.

[note]
  Elasticsearch requires Java.
  You may need to install Java from your operating system's repositories first.

  [screen .sh]
    # Use dnf on Fedora and other newer systems
    sudo dnf install java
    # Use yum on CentOS 7 and RHEL 7
    sudo yum install java

[steps]
* Install Elasticsearch.
  Elasticsearch maintains RPMs and repositories with the latest available versions.
  They provide instructions for setting up a repository for $sys(dnf), $sys(yum), or $sys(zypper).

  $link[>>https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html]

  Alternatively, you can simply download the RPM and install it.

  [screen sh]
  curl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.1.rpm
  # Use dnf on Fedora and other newer systems
  sudo dnf install elasticsearch-6.1.1.rpm
  # Use yum on CentOS 7 and RHEL 7
  sudo yum install elasticsearch-6.1.1.rpm

* Configure the network host that Elasticsearch listens on.
  By default, Elasticsearch only listens on $sys(localhost).

  [note .warning]
    Once you set $sys(network.host) to an external address, Elasticsearch is vulnerable to the outside world.
    Do not start Elasticsearch after making this change until after you have secured it with X-Pack.

  Edit the file $file(/etc/elasticsearch/elasticsearch.yml) and add the following line:

  [code yaml]
    network.host: $var(ip-addr-or-hostname)

  Replace $var(ip-addr-or-hostname) with an IP address or hostname that points to your server.

  For local testing, you can skip this step entirely and point everything at $sys(localhost).

* Configure Elasticsearch to allow Cross-Origin Resource Sharing (CORS).
  The search page speaks directly to the Elasticsearch server.
  Unless CORS is enabled, browsers will refuse to speak to other servers.
  Edit the file $file(/etc/elasticsearch/elasticsearch.yml) and add the following lines:

  [code yaml]
    http.cors.enabled: true
    http.cors.allow-origin: '/https:\/\/$var(mydocsserver.example.com)/'
    http.cors.allow-credentials: true
    http.cors.allow-headers: X-Requested-With,Content-Type,Content-Length,Authorization

  Replace $var(mydocsserver.example.com) with the hostname that serves your documentation.

  For local testing, you can simply allow $sys(localhost), and make HTTPS optional.

  [code yaml]
    # For local testing only
    http.cors.allow-origin: '/https?:\/\/localhost(:[0-9]+)?/'


== Install X-Pack and Kibana

X-Pack provides security features that allow you to safely expose your Elasticsearch cluster to the world.
Kibana provides a web-based user interface for Elasticsearch and X-Pack.
These instructions use Kibana to add users and roles for X-Pack.

[steps]
* Install X-Pack.

  [screen sh]
    sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack

* Set up the initial administrative passwords using the $cmd(setup-passwords) tool.

  [screen sh]
    sudo /usr/share/elasticsearch/bin/x-pack/setup-passwords interactive


[steps]
* FIXME: ssl

  [screen sh]
    /usr/share/elasticsearch/bin/x-pack/certutil ca

  [screen sh]
    /usr/share/elasticsearch/bin/x-pack/certutil cert --ca elastic-stack-ca.p12

  [screen sh]
    sudo mkdir /etc/elasticsearch/certs
    sudo cp elastic-certificates.p12 /etc/elasticsearch/certs/

  $file(/etc/elasticsearch/elasticsearch.yml)

  [code yaml]
    xpack.xpack.ssl.keystore.path: /etc/elasticsearch/certs/elastic-certificates.p12
    xpack.ssl.truststore.path: /etc/elasticsearch/certs/elastic-certificates.p12

  [screen sh]
    sudo /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.ssl.keystore.secure_password
    sudo /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.ssl.truststore.secure_password



[steps]
* FIXME: Configure elasticsearch.yml with x-pack
* FIXME: install kibana
* FIXME: edit kibana.yml
* FIXME: install kibana+x-pack


== Install Kibana

== Add Users and Roles

[--
set user/pass in pintail.cfg

* install kibana:

  https://www.elastic.co/guide/en/kibana/current/rpm.html

* Edit /etc/kibana/kibana.yml :

  elasticsearch.url: "http://localhost:9200"
  elasticsearch.username: "elastic"
  elasticsearch.password: "PASSWORD"


== And More

[steps]
* Start Elasticsearch

  [screen]
  systemctl enable elasticsearch
  systemctl start elasticsearch


/usr/share/kibana/bin/kibana-plugin install x-pack

systemctl enable kibana
systemctl start kibana

http://localhost:5601

* Click $gui(Management) in the sidebar.
* Under $gui(Security), click $gui(Users).
* Select the $gui(Roles) tab.
* Click $gui(Create role).
* Enter $input(pintail) for the name.
* Under $gui(Index Privileges), enter $input(*) for $gui(Indices).
  Then select $gui(all) for $gui(Privileges).

* Select the $gui(Users) tab.
* Click $gui(Create user).
* Enter $input(pintail) for the name.
* Choose a password.
* Kibana requires a full name and email address. Make something up.
* Select $gui(pintail) for $gui(Roles).

* Select the $(Roles) tab.
* Click $gui(Create role).
* Enter $input(pintail_read) for the name.
* Under $gui(Index Privileges), enter a pattern that matches FIXME
  for $gui(Indices).
  Then select $gui(read) for $gui(Privileges).

* /etc/elasticsearch/elasticsearch.yml:

  [screen]
  xpack.security.authc:
    anonymous:
      roles: pintail_read

* sudo systemctl restart elasticsearch
--]
